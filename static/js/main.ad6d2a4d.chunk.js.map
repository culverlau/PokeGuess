{"version":3,"sources":["components/GithubCorner.js","components/Layout.js","sections/ContentSection.js","sections/SelectorSection.js","assets/images/burst-bg.png","components/PokemonImage.js","components/Message.js","components/Button.js","components/PokemonSelector.js","components/CountdownTimer.js","components/ScoreCounter.js","reducers/countdownReducer.js","reducers/gameStatusReducer.js","services/api.js","services/fetchPokemon.js","App.js","reportWebVitals.js","assets/fonts/pokemon-solid.ttf","index.js"],"names":["StyledGithubCorner","styled","a","GithubCorner","href","className","aria-label","width","height","viewBox","aria-hidden","d","fill","style","transformOrigin","GlobalStyle","createGlobalStyle","StyledLayout","main","props","playing","Layout","children","StyledContentSection","div","ContentSection","StyledSelectorSection","SelectorSection","StyledPokemonImage","PokemonImage","guessing","pokemonData","src","burstBackground","filter","pokemon","answer","image","alt","name","StyledMessage","Message","message","StyledButton","span","Button","onClick","PokemonSelector","selectPokemon","map","i","CountdownTimer","time","ScoreCounter","score","roundsCompleted","countdownReducer","state","action","type","isActive","gameStatusReducer","currentRound","api","get","id","url","fetch","then","response","json","console","log","createRoundIds","pokemonPerRound","round","Set","size","add","Math","floor","random","loadRound","roundIds","toTitleCase","string","charAt","toUpperCase","slice","Promise","all","res","sprites","other","front_default","roundData","chosenId","img","Image","decode","App","React","useState","setMessage","setPokemonData","useReducer","gameStatus","setGameStatus","countdown","setCountdown","useEffect","length","fetchPokemon","data","countdownInterval","setInterval","clearInterval","endRound","startRound","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad6d2a4d.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledGithubCorner = styled.a`\n  z-index: 10;\n  &:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out;\n  }\n  svg {\n    fill: #151513;\n    /* fill: var(--pokemon-blue-shadow); */\n    color: #fff;\n    position: absolute;\n    top: 0;\n    border: 0;\n    right: 0;\n  }\n  @keyframes octocat-wave {\n    0%,\n    100% {\n      transform: rotate(0);\n    }\n    20%,\n    60% {\n      transform: rotate(-25deg);\n    }\n    40%,\n    80% {\n      transform: rotate(10deg);\n    }\n  }\n  @media (max-width: 500px) {\n    .github-corner:hover .octo-arm {\n      animation: none;\n    }\n    .github-corner .octo-arm {\n      animation: octocat-wave 560ms ease-in-out;\n    }\n  }\n`;\n\nconst GithubCorner = () => {\n  return (\n    <StyledGithubCorner\n      href='https://your-url'\n      className='github-corner'\n      aria-label='View source on GitHub'\n    >\n      <svg width='80' height='80' viewBox='0 0 250 250' aria-hidden='true'>\n        <path d='M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z'></path>\n        <path\n          d='M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2'\n          fill='currentColor'\n          style={{ transformOrigin: '130px 106px' }}\n          className='octo-arm'\n        ></path>\n        <path\n          d='M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z'\n          fill='currentColor'\n          className='octo-body'\n        ></path>\n      </svg>\n    </StyledGithubCorner>\n  );\n};\n\nexport default GithubCorner;\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport styled from 'styled-components';\nimport GithubCorner from './GithubCorner';\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n  --pokemon-yellow: #ffcb05;\n  --pokemon-blue: #2a75bb;\n  --pokemon-yellow-shadow: #c7a008;\n  /* --pokemon-blue-shadow: #3c5aa6; */\n  --pokemon-blue-shadow: #003a70;\n  --pokemon-blue-light: #7091C5;\n\n  --red: #ee0e33;\n  --red-d: #e41237;\n  --red-dd: #5c0e0a;\n  --red-l: #ff3b5c;\n}\n`;\n\nconst StyledLayout = styled.main`\n  min-height: 100vh;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--red-l);\n  background: linear-gradient(\n    to top right,\n    var(--red),\n    var(--red-l),\n    var(--red-d)\n  );\n  overflow: hidden;\n  box-sizing: border-box;\n  padding: 20px;\n  h1,\n  h2 {\n    font-family: 'pokemon-solid';\n    color: var(--pokemon-yellow);\n    -webkit-text-stroke: 1px var(--pokemon-blue);\n    text-shadow: var(--pokemon-blue-shadow) -0.75px 1px,\n      var(--pokemon-blue-shadow) -1.5px 2px,\n      var(--pokemon-blue-shadow) -2.25px 3px,\n      var(--pokemon-blue-shadow) -3px 4px;\n  }\n  h1 {\n    font-size: 2em;\n    letter-spacing: 0.1em;\n    @media screen and (max-width: 767px) {\n      display: ${(props) => (props.playing ? 'none' : 'block')};\n    }\n    @media screen and (min-width: 768px) {\n      font-size: 4em;\n      letter-spacing: 0.12em;\n      -webkit-text-stroke: 2px var(--pokemon-blue);\n    }\n  }\n  h2 {\n    font-size: 1.6em;\n    letter-spacing: 0.08em;\n    @media screen and (min-width: 768px) {\n      font-size: 3.2em;\n      letter-spacing: 0.1em;\n      -webkit-text-stroke: 1.6px var(--pokemon-blue);\n    }\n  }\n`;\n\nconst Layout = ({ playing, children }) => {\n  return (\n    <StyledLayout playing={playing}>\n      <GlobalStyle />\n      {children}\n      <GithubCorner />\n    </StyledLayout>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledContentSection = styled.div`\n  text-align: center;\n  width: 100%;\n  max-width: 1200px;\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: space-evenly;\n  align-items: center;\n  margin: 0 auto;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 4em;\n  }\n  > div {\n    position: relative;\n    z-index: 2;\n  }\n`;\n\nconst ContentSection = ({children}) => {\n  return <StyledContentSection>{children}</StyledContentSection>\n};\n\nexport default ContentSection;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSelectorSection = styled.div`\n  position: relative;\n  z-index: 3;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 2.5em;\n  margin-top: 1em;\n  margin-bottom: 2em;\n`;\n\nconst SelectorSection = ({ children }) => {\n  return <StyledSelectorSection>{children}</StyledSelectorSection>;\n};\n\nexport default SelectorSection;\n","export default __webpack_public_path__ + \"static/media/burst-bg.2fce1850.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport burstBackground from '../assets/images/burst-bg.png'\n\nconst StyledPokemonImage = styled.div`\n  position: relative;\n  z-index: 1;\n  max-width: 500px;\n  .pokemon-bg {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 2;\n    animation: show-bg 0.5s;\n    @keyframes show-bg {\n      from {\n        transform: scale(0);\n      }\n      50% {\n        transform: scale(1.1);\n      }\n      to {\n        transform: scale(1);\n      }\n    }\n    img {\n      position: relative;\n      object-fit: contain;\n      width: 100%;\n      height: 100%;\n      transform: scale(3);\n      animation-name: pulse;\n      animation-duration: 0.75s;\n      animation-iteration-count: infinite;\n      animation-timing-function: step-end;\n      @keyframes pulse {\n        from {\n          transform: scale(3.5) rotate(0deg);\n        }\n\n        20% {\n          transform: scale(4) rotate(55deg);\n        }\n        40% {\n          transform: scale(3.5) rotate(110deg);\n        }\n        60% {\n          transform: scale(3) rotate(165deg);\n        }\n        80% {\n          transform: scale(3.5) rotate(220deg);\n        }\n        to {\n          transform: scale(4) rotate(295deg);\n        }\n      }\n    }\n  }\n  .pokemon-image {\n    position: relative;\n    z-index: 3;\n    filter: sepia(0) drop-shadow(-4px 6px 0 var(--pokemon-blue-light));\n    img {\n      position: relative;\n      max-width: 100%;\n      transition: 0.5s filter;\n    }\n    &.silhouette {\n      filter: invert(50%) brightness(50%) sepia(100%) saturate(500%) hue-rotate(165deg);\n      animation: 0.5s show-pokemon;\n      img {\n        filter: grayscale(100%) brightness(0) hue-rotate(180deg);\n      }\n    }\n    @keyframes show-pokemon {\n      from {\n        transform: scale(0);\n      }\n      to {\n        transform: scale(1);\n      }\n    }\n  }\n`;\n\nconst PokemonImage = ({ guessing, pokemonData }) => {\n  return (\n    <StyledPokemonImage>\n      <div className='pokemon-bg'>\n        <img src={burstBackground} />\n      </div>\n      <div className={`pokemon-image ${guessing ? 'silhouette' : ''}`}>\n        <img\n          src={\n            pokemonData.filter((pokemon) => pokemon.answer === true)[0]\n              .image\n          }\n          alt={`${\n            guessing\n              ? 'Unknown Pokemon'\n              : pokemonData.filter((pokemon) => pokemon.answer === true)[0]\n                  .name\n          }`}\n        />\n      </div>\n    </StyledPokemonImage>\n  );\n};\n\nexport default PokemonImage;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledMessage = styled.div``;\n\nconst Message = ({ message, playing, pokemonData }) => {\n  return (\n    <StyledMessage>\n      {message ? <h2>{message}</h2> : <h1>Who's That Pokémon?</h1>}\n      {message && playing && (\n        <h2>\n          It's{' '}\n          {\n            pokemonData.filter((pokemon) => pokemon.answer === true)[0]\n              .name\n          }\n          !\n        </h2>\n      )}\n    </StyledMessage>\n  );\n};\n\nexport default Message;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.span`\n  @property --offset {\n    syntax: '<length>';\n    inherits: false;\n    initial-value: 6px;\n  }\n  font-family: 'pokemon-solid';\n  color: var(--pokemon-yellow);\n  -webkit-text-stroke: 1px var(--pokemon-blue);\n  text-shadow: var(--pokemon-blue-shadow) -0.75px 1px,\n    var(--pokemon-blue-shadow) -1.5px 2px,\n    var(--pokemon-blue-shadow) -2.25px 3px, var(--pokemon-blue-shadow) -3px 4px;\n  min-width: 150px;\n  font-size: 2em;\n  letter-spacing: 0.12em;\n  cursor: pointer;\n  text-decoration: underline;\n  text-decoration-skip-ink: none;\n  text-decoration-color: var(--pokemon-blue);\n  text-underline-offset: var(--offset, 6px);\n  transition: transform 0.3s, --offset 0.3s, text-decoration-color 0.3s;\n  @media screen and (min-width: 768px) {\n    font-size: 3em;\n    -webkit-text-stroke: 2px var(--pokemon-blue);\n  }\n  &:hover, &:active, &:focus {\n    transform: translateY(-5px);\n    --offset: 16px;\n    text-decoration-color: var(--pokemon-yellow);\n  }\n`;\n\nconst Button = ({ onClick, children, ...props }) => {\n  return (\n    <StyledButton onClick={onClick} {...props}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nconst PokemonSelector = ({pokemonData, selectPokemon}) => {\n  return pokemonData.map((pokemon, i) => (\n    <Button onClick={() => selectPokemon(pokemon)} key={i}>\n      {pokemon.name}\n    </Button>\n  ));\n};\n\nexport default PokemonSelector","import React from 'react';\n\nconst CountdownTimer = ({ time }) => <h2>Time Remaining: {time}</h2>;\n\nexport default CountdownTimer;\n","import React from 'react';\n\nconst ScoreCounter = ({ score, roundsCompleted }) => (\n  <h2>\n    Current Score: {score}/{roundsCompleted}\n  </h2>\n);\n\nexport default ScoreCounter;\n","const countdownReducer = (state, action) => {\n  const timePerRound = 5;\n  switch (action.type) {\n    case 'start':\n      return { isActive: true, time: timePerRound };\n    case 'stop':\n      return { ...state, isActive: false };\n    case 'subtract':\n      return { ...state, time: state.time - 1 };\n  }\n};\n\nexport default countdownReducer","const gameStatusReducer = (state, action) => {\n  switch (action.type) {\n    case 'start':\n      return { ...state, score: 0, playing: true };\n    case 'final':\n      return { ...state, currentRound: 0, roundsCompleted: 0, playing: false };\n    case 'nextRound':\n      return { ...state, currentRound: state.currentRound + 1 };\n    case 'completeRound':\n      return { ...state, roundsCompleted: state.roundsCompleted + 1 };\n    case 'score':\n      return { ...state, score: state.score + 1 };\n  }\n};\n\nexport default gameStatusReducer","const get = async (id) => {\n  const base = 'https://pokeapi.co/api/v2/pokemon/';\n  const url = base + id;\n  try {\n    const response = await fetch(url).then((response) => response.json());\n    return response;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nconst api = {\n  get,\n};\n\nexport default api;\n","import api from './api';\n\nconst generateRandomId = () => {\n  // Pokemon IDs go from 1 to 898\n  return Math.floor(Math.random() * 897) + 1;\n};\n\nconst createRoundIds = (pokemonPerRound) => {\n  // Using Set to remove possibility of duplicate IDs within the same array\n  const round = new Set();\n  while (round.size < pokemonPerRound) {\n    round.add(generateRandomId());\n  }\n  return [...round];\n};\n\nconst loadRound = async (pokemonPerRound) => {\n  const roundIds = createRoundIds(pokemonPerRound);\n  const toTitleCase = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  let roundData = await Promise.all(\n    roundIds.map(async (id) => {\n      try {\n        // Use API to grab pokemon's ID, name, and image\n        const res = await api.get(id);\n        const pokemon = {\n          id: res.id,\n          name: toTitleCase(res.name),\n          image: res.sprites.other['official-artwork'].front_default,\n          answer: false,\n        };\n        return pokemon;\n      } catch (err) {\n        console.log(err);\n      }\n    })\n  );\n\n  // randomly mark one of the 4 pokemon as the \"answer\"\n  const chosenId = Math.floor(Math.random() * pokemonPerRound);\n  roundData[chosenId] = {\n    ...roundData[chosenId],\n    answer: true,\n  };\n\n  // Under low data speeds during throttle testing, each image took >3 seconds to load, so we need to start preloading images once the app is initiated and prevent the start of the next round until that round's image is ready in the cache\n  const img = new Image();\n  img.src = roundData[chosenId].image;\n  await img.decode();\n\n  return roundData;\n};\n\nexport default loadRound;\n","import React from 'react';\nimport Layout from './components/Layout';\nimport ContentSection from './sections/ContentSection';\nimport SelectorSection from './sections/SelectorSection';\n\nimport PokemonImage from './components/PokemonImage';\nimport Message from './components/Message';\nimport Button from './components/Button';\nimport PokemonSelector from './components/PokemonSelector';\nimport CountdownTimer from './components/CountdownTimer';\nimport ScoreCounter from './components/ScoreCounter';\n\nimport countdownReducer from './reducers/countdownReducer';\nimport gameStatusReducer from './reducers/gameStatusReducer';\n\nimport fetchPokemon from './services/fetchPokemon';\n\nfunction App() {\n  const [message, setMessage] = React.useState(null);\n  const [pokemonData, setPokemonData] = React.useState([]);\n  const [gameStatus, setGameStatus] = React.useReducer(gameStatusReducer, {\n    playing: false,\n    currentRound: 0,\n    roundsCompleted: 0,\n    score: 0,\n  });\n  const [countdown, setCountdown] = React.useReducer(countdownReducer, {\n    isActive: false,\n    time: 5,\n  });\n\n  const numberOfRounds = 3;\n  const pokemonPerRound = 4;\n\n  // Populate Pokemon Data\n  React.useEffect(() => {\n    if (!(pokemonData.length < numberOfRounds)) {\n      return;\n    }\n    fetchPokemon(pokemonPerRound).then((data) =>\n      setPokemonData((state) => [...state, data])\n    );\n  }, [pokemonData]);\n\n  // Countdown Timer Interval\n  React.useEffect(() => {\n    if (!countdown.isActive) {\n      return;\n    }\n    if (countdown.time > 0) {\n      const countdownInterval = setInterval(\n        () => setCountdown({ type: 'subtract' }),\n        1000\n      );\n      return () => clearInterval(countdownInterval);\n    } else {\n      endRound();\n      setMessage('Ran Out Of Time!');\n    }\n  }, [countdown]);\n\n  const startRound = () => {\n    setCountdown({ type: 'start' });\n    setMessage(null);\n  };\n\n  const endRound = () => {\n    setCountdown({ type: 'stop' });\n    setGameStatus({ type: 'completeRound' });\n  };\n\n  const getNewRound = () => {\n    if (!gameStatus.playing) {\n      setGameStatus({ type: 'start' });\n      startRound();\n    } else if (gameStatus.roundsCompleted === numberOfRounds) {\n      setGameStatus({ type: 'final' });\n      setPokemonData([]);\n      setMessage('Total Score: ' + gameStatus.score + '/' + numberOfRounds);\n    } else {\n      setGameStatus({ type: 'nextRound' });\n      startRound();\n    }\n  };\n\n  const selectPokemon = (pokemon) => {\n    endRound();\n    const answer = pokemonData[gameStatus.currentRound].filter(\n      (pokemon) => pokemon.answer === true\n    )[0];\n    if (pokemon.id === answer.id) {\n      setMessage('Correct!');\n      setGameStatus({ type: 'score' });\n    } else {\n      setMessage('Wrong!');\n    }\n  };\n\n  return (\n    <Layout playing={gameStatus.playing}>\n      <ContentSection>\n        {gameStatus.playing && (\n          <PokemonImage\n            guessing={countdown.isActive}\n            pokemonData={pokemonData[gameStatus.currentRound]}\n          />\n        )}\n        <div>\n          <Message\n            message={message}\n            playing={gameStatus.playing}\n            pokemonData={pokemonData[gameStatus.currentRound]}\n          />\n          {countdown.isActive && <CountdownTimer time={countdown.time} />}\n          {gameStatus.playing && (\n            <ScoreCounter\n              score={gameStatus.score}\n              roundsCompleted={gameStatus.roundsCompleted}\n            />\n          )}\n        </div>\n      </ContentSection>\n      <SelectorSection>\n        {countdown.isActive ? (\n          <PokemonSelector\n            pokemonData={pokemonData[gameStatus.currentRound]}\n            selectPokemon={selectPokemon}\n          />\n        ) : !pokemonData[0] ||\n          (gameStatus.roundsCompleted < numberOfRounds &&\n            !pokemonData[gameStatus.currentRound + 1]) ? (\n          <Button disabled>Loading...</Button>\n        ) : (\n          <Button onClick={getNewRound}>\n            {gameStatus.playing\n              ? gameStatus.roundsCompleted < numberOfRounds\n                ? 'Next Round'\n                : 'View Final Score'\n              : gameStatus.score\n              ? 'Play Again?'\n              : 'Start'}\n          </Button>\n        )}\n      </SelectorSection>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/pokemon-solid.5d60be1f.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/fonts/pokemon-solid.ttf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}